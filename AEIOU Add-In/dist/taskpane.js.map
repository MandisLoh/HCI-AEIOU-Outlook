{"version":3,"file":"taskpane.js","mappings":"yBACA,IAAIA,EAAsB,CAAC,E,4TCiBpB,SAAeC,IAAtB,+B,iDAAO,6FAILC,OAAOC,QAAQC,QAAQC,KAAKC,KAAKC,SAC/B,OACA,CAAEC,aAAc,mCAChB,SAAkBC,GACdC,SAASC,eAAe,gBAAgBC,UAAY,qBAAuBH,EAAOI,MAClF,IAAIC,EAAQL,EAAOI,MACnBE,QAAQC,IAAIF,GAGZ,IAAIG,EAAWH,EAAMI,QAAQ,iCAAiC,KAC9DH,QAAQC,IAAIC,GAEZ,IAAIE,EAAYF,EAASC,QAAQ,UAAU,KAC3CH,QAAQC,IAAIG,GAEZ,IAAIC,EAAYD,EAAUE,MAAM,GAAI,GAAGC,MAAM,KAAKC,KAAK,KAAOJ,EAAUE,OAAO,GAC/EN,QAAQC,IAAII,GAGZ,IAAII,EAAY,8DAAgEJ,EAAUK,cAC1FV,QAAQC,IAAIQ,GAGZ,IAAIE,EAAU,IAAIC,eAClBD,EAAQE,KAAM,MAAOJ,GAAW,GAChCE,EAAQG,KAAM,MACd,IAAIC,EAAsBJ,EAAQK,aAKlC,GAJAhB,QAAQC,IAAIc,GAIe,KAAvBA,EACFpB,SAASC,eAAe,gBAAgBC,UAAY,qBAEjD,CACHF,SAASC,eAAe,gBAAgBC,UAAY,oBACpD,IAAMoB,EAAQ,IAAIC,KACZC,EAAM,IAAID,KAChBC,EAAIC,SAASH,EAAMI,WAAa,GAChClC,OAAOC,QAAQC,QAAQiC,0BAA0B,CACzCL,MAAOA,EACPE,IAAKA,EACLI,SAAU,GACVC,QAASrC,OAAOC,QAAQC,QAAQC,KAAKkC,QACrCjC,KAAMG,EAAOI,OAE3B,CAEH,IApDM,4C,sBCjBPb,EAAoBwC,EAAI,SAASC,EAASC,GACzC,IAAI,IAAIC,KAAOD,EACX1C,EAAoB4C,EAAEF,EAAYC,KAAS3C,EAAoB4C,EAAEH,EAASE,IAC5EE,OAAOC,eAAeL,EAASE,EAAK,CAAEI,YAAY,EAAMC,IAAKN,EAAWC,IAG3E,ECPA3C,EAAoB4C,EAAI,SAASK,EAAKC,GAAQ,OAAOL,OAAOM,UAAUC,eAAeC,KAAKJ,EAAKC,EAAO,EFUtGhD,OAAOoD,SAAQ,SAACC,GACVA,EAAKC,OAAStD,OAAOuD,SAASC,UAChChD,SAASC,eAAe,gBAAgBgD,MAAMC,QAAU,OACxDlD,SAASC,eAAe,YAAYgD,MAAMC,QAAU,OACpDlD,SAASC,eAAe,OAAOkD,QAAU5D,EAE5C,G","sources":["webpack:///webpack/bootstrap?","webpack:///./src/taskpane/taskpane.js?","webpack:///webpack/runtime/define property getters?","webpack:///webpack/runtime/hasOwnProperty shorthand?"],"sourcesContent":["// The require scope\nvar __webpack_require__ = {};\n\n","/*\r\n * Copyright (c) Microsoft Corporation. All rights reserved. Licensed under the MIT license.\r\n * See LICENSE in the project root for license information.\r\n */\r\n\r\n/* global document, Office */\r\n\r\n\r\n\r\n\r\nOffice.onReady((info) => {\r\n  if (info.host === Office.HostType.Outlook) {\r\n    document.getElementById(\"sideload-msg\").style.display = \"none\";\r\n    document.getElementById(\"app-body\").style.display = \"flex\";\r\n    document.getElementById(\"run\").onclick = run;\r\n  }\r\n});\r\n\r\nexport async function run() {\r\n  \r\n\r\n\r\n  Office.context.mailbox.item.body.getAsync(\r\n    \"text\",\r\n    { asyncContext: \"This is passed to the callback\" },\r\n    function callback(result)  {\r\n        document.getElementById(\"item-subject\").innerHTML = \"<b>Body:</b> <br/>\" + result.value;\r\n        var input = result.value;\r\n        console.log(input);\r\n\r\n        // remove all punctuation\r\n        var replaced = input.replace(/[.,\\/#!$%\\^&\\*;:{}=\\-_`~()\"\"]/g,\" \");\r\n        console.log(replaced);\r\n        // changes the consecutive empty spaces into only 1 empty space\r\n        var replaced1 = replaced.replace(/\\s{2,}/g,' ');\r\n        console.log(replaced1);\r\n        // replace empty space with +\r\n        var replaced2 = replaced1.slice(0, -1).split(' ').join('+') + replaced1.slice(-1);\r\n        console.log(replaced2);\r\n       \r\n        // heroku website\r\n        var predicted = 'https://outlook-addin-aeiou.herokuapp.com/predict?textbody=' + replaced2.toLowerCase() ;\r\n        console.log(predicted) ;\r\n        \r\n        //get predicted value\r\n        var xmlHttp = new XMLHttpRequest();\r\n        xmlHttp.open( \"GET\", predicted, false ); // false for synchronous request\r\n        xmlHttp.send( null );\r\n        var returned_prediction = xmlHttp.responseText;\r\n        console.log(returned_prediction);\r\n        \r\n\r\n\r\n        if (returned_prediction == \"0\") {\r\n          document.getElementById(\"item-subject\").innerHTML = \"Not a meeting!\"\r\n        }\r\n        else {\r\n          document.getElementById(\"item-subject\").innerHTML = \"Meeting detected!\"\r\n          const start = new Date();\r\n          const end = new Date();\r\n          end.setHours(start.getHours() + 1);\r\n          Office.context.mailbox.displayNewAppointmentForm({\r\n                  start: start,\r\n                  end: end,\r\n                  location: \"\",\r\n                  subject: Office.context.mailbox.item.subject,\r\n                  body: result.value\r\n        }\r\n  )};\r\n\r\n})}\r\n        \r\n      \r\n\r\n        \r\n        \r\n        // Put in model to use the result.value\r\n        \r\n        //result = Result of running model\r\n    //     const start = new Date();\r\n    //     const end = new Date();\r\n    //     end.setHours(start.getHours() + 1);\r\n\r\n    //     //if (result){displayNewAppointmentForm}\r\n    //     Office.context.mailbox.displayNewAppointmentForm({\r\n    //       start: start,\r\n    //       end: end,\r\n    //       location: \"\",\r\n    //       subject: \"\",\r\n    //       body: result.value\r\n    //     });\r\n    //     //else{document.getElementById(\"item-subject\").innerHTML = Not a meeting!}\r\n  // });\r\n  \r\n  // Write message property value to the task pane\r\n  // document.getElementById(\"item-subject\").innerHTML = \"<b>Subject:</b> <br/>\" + item.body;\r\n  //document.body.getElementsByClassName(\"foo\")","// define getter functions for harmony exports\n__webpack_require__.d = function(exports, definition) {\n\tfor(var key in definition) {\n\t\tif(__webpack_require__.o(definition, key) && !__webpack_require__.o(exports, key)) {\n\t\t\tObject.defineProperty(exports, key, { enumerable: true, get: definition[key] });\n\t\t}\n\t}\n};","__webpack_require__.o = function(obj, prop) { return Object.prototype.hasOwnProperty.call(obj, prop); }"],"names":["__webpack_require__","run","Office","context","mailbox","item","body","getAsync","asyncContext","result","document","getElementById","innerHTML","value","input","console","log","replaced","replace","replaced1","replaced2","slice","split","join","predicted","toLowerCase","xmlHttp","XMLHttpRequest","open","send","returned_prediction","responseText","start","Date","end","setHours","getHours","displayNewAppointmentForm","location","subject","d","exports","definition","key","o","Object","defineProperty","enumerable","get","obj","prop","prototype","hasOwnProperty","call","onReady","info","host","HostType","Outlook","style","display","onclick"],"sourceRoot":""}